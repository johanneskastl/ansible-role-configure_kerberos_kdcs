---
# configure_kerberos_kdcs/handlers/main.yml

- name: 'Remove file kdc.conf (if it was created during installation)'
  file:
    path: "{{ path_to_kdc_conf }}"
    state: 'absent'
  tags:
    - 'installation'

- name: 'Remove file krb5.conf (if it was created during installation)'
  file:
    path: "{{ path_to_krb5_conf }}"
    state: 'absent'
  tags:
    - 'installation'

#
# KDC
#
- name: 'Stop the Kerberos KDC service'
  service:
    name: "{{ kerberos_kdc_service }}"
    state: 'stopped'
    masked: 'false'
  tags:
    - 'installation'

- name: 'Restart the Kerberos KDC service'
  service:
    name: "{{ kerberos_kdc_service }}"
    state: 'restarted'
  when: 'not configure_replication_on_secondary_kdcs| bool'
  tags:
    - 'configuration'

- name: 'Restart the Kerberos kadmin service'
  service:
    name: "{{ kerberos_kadmin_service | default(kerberos_kdc_service) }}"
    state: 'restarted'
  when: 'not configure_replication_on_secondary_kdcs| bool'
  tags:
    - 'configuration'

#
# Replication on secondary KDCs
#
- name: 'Restart the Kerberos kpropd service'
  service:
    name: "{{ kerberos_kpropd_service }}"
    state: 'restarted'
  when: 'configure_replication_on_secondary_kdcs | bool'
  tags:
    - 'replication_other_kdcs'

#
# Replication on first KDC
#
- name: 'Trigger systemctl daemon-reload'
  ansible.builtin.systemd:
    daemon_reload: 'yes'

- name: 'Restart the krb5-replication-kprop timers'
  service:
    name: 'krb5-replication-kprop-{{ secondary_kdc_to_sync }}.timer'
    state: 'restarted'
  with_items: "{{ secondary_kdcs }}"
  loop_control:
    loop_var: secondary_kdc_to_sync

#
# Delete krb5.keytab if host principal was created
#
- name: 'Delete krb5.keytab if host principal was created (as something looks wrong then)'
  file:
    path: "{{ path_to_krb5_keytab }}"
    state: 'absent'
  delegate_to: "{{ admin_server }}"
  tags:
    - 'create_host_principals'
    - 'configuration'
    - 'replication_1st_kdc'
#
# Delete to-be-transferred keytab for target host if host was freshly created
#
- name: 'Delete to-be-transferred keytab for target host if host was freshly created'
  file:
    path: "/root/keytab_for_host_{{ inventory_hostname }}"
    state: 'absent'
  delegate_to: "{{ admin_server }}"
  tags:
    - 'create_host_principals'
    - 'replication_other_kdcs'
