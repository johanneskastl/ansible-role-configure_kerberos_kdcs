---
# configure_kerberos_kdcs/tasks/create_krb5_keytab_on_first_KDC.yml

#
# Create krb5.keytab if it does not yet exist
#
- name: 'Create krb5.keytab if it does not yet exist'
  command:
    cmd: "kadmin.local ktadd -k {{ path_to_krb5_keytab }} host/{{ item }}.{{ kerberos_dns_domain | default(kerberos_realm | lower) }}"
    creates: "{{ path_to_krb5_keytab }}"
  with_items:
    - "{{ inventory_hostname }}"
  delegate_to: "{{ admin_server }}"
  register: creation_of_keytab_on_first_kdc
  failed_when: "creation_of_keytab_on_first_kdc.stderr is defined and 'does not exist' in creation_of_keytab_on_first_kdc.stderr"
  tags:
    - 'configuration'
    - 'create_host_principals'
    - 'replication_1st_kdc'

#
# List principals in the keytab and add the first KDC if missing
#
- name: 'List principals in they krb5.keytab'
  command:
    cmd: "klist -k -t {{ path_to_krb5_keytab }}"
  changed_when: 'false'
  check_mode: 'false'
  failed_when: '"not found while starting keytab scan" in list_of_principals_in_keytab.stderr and not ansible_check_mode'
  register: list_of_principals_in_keytab
  delegate_to: "{{ admin_server }}"
  tags:
    - 'configuration'
    - 'create_host_principals'
    - 'replication_1st_kdc'

- name: "Export key for the first KDC's host principal to to krb5.keytab"
  command:
    cmd: "kadmin.local ktadd -norandkey -k {{ path_to_krb5_keytab }} host/{{ item }}.{{ kerberos_dns_domain | default(kerberos_realm | lower) }}"
  with_items:
    - "{{ inventory_hostname }}"
  when: 'item not in list_of_principals_in_keytab.stdout'
  delegate_to: "{{ admin_server }}"
  tags:
    - 'configuration'
    - 'create_host_principals'
    - 'replication_1st_kdc'
